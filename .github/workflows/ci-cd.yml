name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  MONGODB_VERSION: '7.0'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install root dependencies
      run: npm install

    - name: Install client dependencies
      run: cd client && npm install

    - name: Install server dependencies
      run: cd server && npm install

    - name: Lint client
      run: cd client && npm run lint

    - name: Lint server
      run: cd server && npm run lint

    - name: Test client
      run: cd client && npm test

    - name: Test server
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://test:test@localhost:27017/penguin-os-test?authSource=admin
        JWT_SECRET: test-secret
      run: cd server && npm test

    - name: Build client
      run: cd client && npm run build

    - name: Build server
      run: cd server && npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/penguin-os-client:latest
          ${{ secrets.DOCKER_USERNAME }}/penguin-os-client:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/penguin-os-server:latest
          ${{ secrets.DOCKER_USERNAME }}/penguin-os-server:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Deploy to production
      run: |
        echo "Deployment step would go here"
        echo "This could include:"
        echo "- Updating Kubernetes manifests"
        echo "- Deploying to cloud providers"
        echo "- Running database migrations"
        echo "- Health checks"